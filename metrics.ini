#<+Midiman> BUST IT OPEN DOG CHECK OUT WHATS IN SIDE
#<+Midiman> ONE COPY OF CONSENSUAL (Must be 18 to play) THEMING SOFTWARE
#<+Midiman> ONE COPY OF KYZETUN'S PATENTED GUIDE TO CONSENSUAL: SAFE THEMING AND SEXUAL PLEASURE FOR YOU AND MULTIPLE PARTICIPANTS Software Manual
#<+Midiman> ONE COPY OF "Why you should stop sucking at theming things" BY FREE MASON J and KYZEL T. Ungulator
#<+Midiman> 18" HDMI Cord
#<+Midiman> Pillow

# If you're opening metrics.ini hoping to edit some feature in, you're better
# off asking Kyzentun to do it instead.  The point of all the configuration
# choices in the menus is to allow people to have the features they want
# without editing the theme.

##uh, thats not what im here to do. im trying to port the pre-song options menu into Lambada
##actually now im here to change what is shown on each option level
##well ok i kinda want the new mods in here now so im heading off to discord

[Common]
ScreenHeight=480
#InitialScreen="ScreenSigilTest"
#InitialScreen="ScreenAMVTest"
#InitialScreen="ScreenSickWheelTest"
#InitialScreen="ScreenMiscTest"
InitialScreen="ScreenVersionTest"
AutoSetStyle=true
OverlayScreens="ScreenSystemLayer,ScreenSyncOverlay,ScreenStatsOverlay,ScreenDebugOverlay,ScreenInstallOverlay,ScreenConfetti"

[ScreenConfetti]
Class="ScreenWithMenuElements"
Fallback="ScreenWithMenuElements"

[BitmapText]
# The colors in the 'roulette' text. you can have a lot!
NumRainbowColors=8
RainbowColor1=fetch_color("accent.yellow")
RainbowColor2=fetch_color("accent.orange")
RainbowColor3=fetch_color("accent.red")
RainbowColor4=fetch_color("accent.magenta")
RainbowColor5=fetch_color("accent.violet")
RainbowColor6=fetch_color("accent.blue")
RainbowColor7=fetch_color("accent.cyan")
RainbowColor8=fetch_color("accent.green")

[ScreenWithMenuElements]
ShowCreditDisplay=false
TimerSeconds=-1
TimerOnCommand=visible,false

[ScreenWithKyzInput]
Class="ScreenWithMenuElements"
Fallback="ScreenWithMenuElements"
RepeatRate=10
RepeatDelay=.25

[CodeDetector]
# Go away, all of you.  You have no useful purpose here.
PrevSteps1=""
PrevSteps2=""
NextSteps1=""
NextSteps2=""
NextSort1=""
NextSort2=""
NextSort3=""
NextSort4=""
ModeMenu1=""
ModeMenu2=""
Mirror=""
Left=""
Right=""
Shuffle=""
SuperShuffle=""
NextTransform=""
NextScrollSpeed=""
PreviousScrollSpeed=""
NextAccel=""
NextEffect=""
NextAppearance=""
NextTurn=""
Reverse=""
HoldNotes=""
Mines=""
Dark=""
CancelAll=""
NextGroup=""
PrevGroup=""
CloseCurrentFolder=""
Hidden=""
RandomVanish=""
SaveScreenshot1=""
SaveScreenshot2=""

[ScreenVersionTest]
Fallback="ScreenWithKyzInput"
PlayMusic=false

[ScreenInitialMenu]
Fallback="ScreenWithKyzInput"
PlayMusic=false

[ScreenAMVTest]
Fallback="ScreenWithMenuElements"
Class="ScreenWithMenuElements"
CodeNames="left,right,reset"
Codeleft="Left"
Coderight="Right"
Codereset="Up"

[ScreenSigilTest]
Fallback="ScreenWithKyzInput"

[ScreenMiscTest]
Fallback="ScreenWithKyzInput"
RepeatRate=10
RepeatDelay=.25

[ScreenNewFieldTest]
Fallback="ScreenWithKyzInput"

[ScreenButtonMash]
Fallback="ScreenWithKyzInput"

[ScreenNoteTest]
Fallback="ScreenWithKyzInput"

[ScreenSickWheelTest]
Fallback="ScreenWithKyzInput"

[ScreenSplineDesign]
Fallback="ScreenWithKyzInput"

[ScreenTitleMenu]
# Choosing options on the menu wasn't working, and didn't seem worth struggling with, so this screen has been replaced with ScreenInitialMenu.
Fallback="ScreenInitialMenu"
Class="ScreenWithMenuElements"
PrevScreen="ScreenInitialMenu"
IdleTimeoutSeconds=1
IdleTimeoutScreen="ScreenInitialMenu"

ShowHeader=false
ShowFooter=false

[Combo]
#NumberMinZoom=0.1
#NumberMaxZoom=10
#NumberMaxZoomAt=1000

[ScreenOnlineNotSupported]
Fallback="ScreenWithKyzInput"

[ScreenConsSelectMusic]
Fallback="ScreenWithKyzInput"
PlayMusic=false

[ScreenConsEditMenu]
Fallback="ScreenWithKyzInput"
PlayMusic=false

[ScreenEditMenu]
PrevScreen="ScreenInitialMenu"

[EditMenu]
SongTextBannerX=SCREEN_CENTER_X-28

[StepsDisplay]
MeterX=60
DescriptionOnCommand=shadowlength,0;maxwidth,100

[ScreenEdit]
SetModScreen="ScreenSickPlayerOptions"
OptionsScreen="ScreenSickPlayerOptions"

[OptionRowMiniMenuContext]
Fallback="OptionRowMiniMenu"
TitleX=-mini_menu_width/2

[OptionRowMiniMenu]
TitleX=SCREEN_CENTER_X-mini_menu_width/2
TitleOnCommand=halign,0;strokecolor,fetch_color("stroke");zoom,.75;maxwidth,mini_menu_width/2
TitleGainFocusCommand=diffuse,fetch_color("text")
TitleLoseFocusCommand=diffuse,fetch_color("text")
TitleDisabledCommand=diffuse,fetch_color("text_disabled")
ItemsLongRowSharedX=SCREEN_CENTER_X+mini_menu_width/2
ItemOnCommand=halign,1;diffuse,fetch_color("text_other");strokecolor,fetch_color("stroke");zoom,.75;maxwidth,mini_menu_width/2
ColorSelected=fetch_color("text_other")
ColorNotSelected=fetch_color("text_other")
ColorDisabled=fetch_color("text_other")

[ScreenMiniMenuContext]
RowPositionTransformFunction=function(self,offsetFromCenter,itemIndex,numItems) self:xy(_screen.cx,_screen.cy+(24*(offsetFromCenter-(numItems-1)/2))) end
LineHighlightX=SCREEN_CENTER_X
NumRowsShown=16

[ScreenReloadSongs]
ScreenOnCommand=%function(self) self:GetChild("LoadingText"):diffuse(fetch_color("accent.cyan")) end

[ScreenDemonstration]
Fallback="ScreenGameplay"
Class="ScreenDemonstration"
NextScreen="ScreenInitialMenu"
PrevScreen="ScreenInitialMenu"
StartScreen="ScreenInitialMenu"
PlayMusic=false
SecondsToShow=screen_demonstration_show_time()

LightsMode="LightsMode_Demonstration"
DifficultiesToShow="easy,medium,hard,challenge"
ShowCourseModifiersProbability=0
AllowAdvancedModifiers=false
AllowStyleTypes="TwoPlayersTwoSides"

MinSecondsToStep=0
MinSecondsToMusic=0

[ScreenSickPlayerOptions]
Fallback="ScreenWithKyzInput"
NextScreen="ScreenStageInformation"
PlayMusic=false

[ScreenOptionsService]
NextScreen="ScreenInitialMenu"
PrevScreen="ScreenInitialMenu"
LineNetwork="gamecommand;screen,ScreenOnlineNotSupported;name,Network Options"

[ScreenConsService]
Fallback="ScreenWithKyzInput"

[ScreenColorConfig]
Fallback="ScreenWithKyzInput"

[ScreenWorkoutConfig]
Fallback="ScreenWithKyzInput"

[ScreenWorkoutPick]
Fallback="ScreenWithKyzInput"

[ScreenWorkoutBreak]
Fallback="ScreenWithKyzInput"

[ScreenWorkoutEval]
Fallback="ScreenWithKyzInput"

[ScreenTextEntry]
QuestionY=_screen.cy-18
QuestionOnCommand=vertspacing,get_line_height()-32;wrapwidthpixels,600;diffuse,unchangeable_color.text
AnswerY=_screen.cy+42
AnswerOnCommand=zoom,1;diffuse,unchangeable_color.text

[ScreenPrompt]
QuestionY=_screen.cy-18
QuestionOnCommand=vertspacing,get_line_height()-32;wrapwidthpixels,600;diffuse,unchangeable_color.text
Answer1Of1OnCommand=diffuse,fetch_color("accent.cyan")
Answer1Of2OnCommand=diffuse,fetch_color("accent.cyan")
Answer2Of2OnCommand=diffuse,fetch_color("accent.red")
Answer1Of3OnCommand=diffuse,fetch_color("accent.cyan")
Answer2Of3OnCommand=diffuse,fetch_color("accent.red")
Answer3Of3OnCommand=diffuse,fetch_color("accent.violet")

[LifeMeterBar]
StreamX= 0
StreamY= 0
InitialValue=get_life_value("initial")
LifePercentChangeW1=get_life_value("w1")
LifePercentChangeW2=get_life_value("w2")
LifePercentChangeW3=get_life_value("w3")
LifePercentChangeW4=get_life_value("w4")
LifePercentChangeW5=get_life_value("w5")
LifePercentChangeMiss=get_life_value("miss")
LifePercentChangeHitMine=get_life_value("hit_mine")
LifePercentChangeHeld=IsGame("pump") and 0.000 or get_life_value("held")
LifePercentChangeLetGo=IsGame("pump") and 0.000 or get_life_value("let_go")
LifePercentChangeMissedHold=IsGame("pump") and 0.000 or get_life_value("missed_hold")
LifePercentChangeCheckpointMiss=get_life_value("checkpoint_miss")
LifePercentChangeCheckpointHit=get_life_value("checkpoint_hit")


[LifeMeterBattery]
MinesSubtractLives=0
BatteryP1X=0
BatteryP2X=0
BatteryP1Y=8
BatteryP2Y=8
NumLivesFormat=""

[LifeMeterBattery Percent]
RemainderFormat=""
PercentFormat=""
PercentP1OnCommand=hibernate,math.huge
PercentP2OnCommand=hibernate,math.huge
DancePointsP1OnCommand=hibernate,math.huge
DancePointsP2OnCommand=hibernate,math.huge

[LifeMeterTime]
MeterWidth=24
MeterHeight=SCREEN_HEIGHT

[StreamDisplay]
PillTransformFunction=life_pill_transform
NumPills=32

[NoteField]
ShowBoard=true

[ScreenMapControllers]
LockInputSecs=0
AutoDismissWarningSecs=.1

[ScreenGameplay]
RepeatRate=10
RepeatDelay=.25
OutTransitionLength=4
BeginFailedDelay=4
GiveUpSeconds=15
NextScreen=cons_branches.after_gameplay()
MarginFunction=function() return 20, 40, 20 end
ForceImmediateFailForBattery=false
ScoreP1OnCommand=hibernate,math.huge
ScoreP2OnCommand=hibernate,math.huge
SecondaryScoreP1OnCommand=hibernate,math.huge
SecondaryScoreP2OnCommand=hibernate,math.huge
StepsDisplayP1OnCommand=hibernate,math.huge
StepsDisplayP2OnCommand=hibernate,math.huge
StepsDisplayP1X=SCREEN_RIGHT+SCREEN_RIGHT
StepsDisplayP2X=SCREEN_RIGHT+SCREEN_RIGHT
StepsDescriptionP1OnCommand=hibernate,math.huge
StepsDescriptionP2OnCommand=hibernate,math.huge
LifeP1OnCommand=hibernate,math.huge
LifeP2OnCommand=hibernate,math.huge
DebugStartOnCommand=%debug_text_start_on
DebugBackOnCommand=%debug_text_start_on
Debugdebug_text_updateCommand=%debug_text_update
DebugTweenOffCommand=stoptweening;april_linear,1/8;diffusealpha,0
# Disable the normal start and select button actions to enable a custom pause
# menu.
UnpauseWithStart=false
StartGivesUp=false
BackGivesUp=false
SelectSkipsSong=false

[ScreenHeartEntry]
Class="ScreenWithMenuElements"
Fallback="ScreenWithKyzInput"
PlayMusic=false

[Player]
TapJudgmentsUnderField=true
HoldJudgmentsUnderField=true
ComboUnderField=true
ComboBreakOnImmediateHoldLetGo=false
RollBodyIncrementsCombo=true

[ScreenEvaluationNormal]
PrevScreen=cons_branches.after_evaluation()
NextScreen=cons_branches.after_evaluation()
# start and select codes just to keep the screen from acting on them because this isn't yet an SWME based screen.
CodeNames="start,select,start_release,select_release"
Codestart="Start"
Codeselect="Select"
Codestart_release="~Start"
Codeselect_release="~Select"

[ScreenProfileSave]
NextScreen=Branch.AfterProfileSave()
PrevScreen="ScreenInitialMenu"

[ScreenConsNameEntry]
Fallback="ScreenWithKyzInput"

[Gameplay]
ToastyTriggersAt=function(pn, level) return 250 end
MinScoreToContinueCombo="TapNoteScore_W4"
MinScoreToMaintainCombo="TapNoteScore_W4"

[ScoreKeeperNormal]
PercentScoreWeightCheckpointHit=get_score_weight("PercentScoreWeightCheckpointHit")
PercentScoreWeightCheckpointMiss=get_score_weight("PercentScoreWeightCheckpointMiss")
PercentScoreWeightHeld=get_score_weight("PercentScoreWeightHeld")
PercentScoreWeightHitMine=get_score_weight("PercentScoreWeightHitMine")
PercentScoreWeightAvoidMine=get_score_weight("PercentScoreWeightAvoidMine")
PercentScoreWeightLetGo=get_score_weight("PercentScoreWeightLetGo")
PercentScoreWeightMissedHold=get_score_weight("PercentScoreWeightMissedHold")
PercentScoreWeightMiss=get_score_weight("PercentScoreWeightMiss")
PercentScoreWeightW1=get_score_weight("PercentScoreWeightW1")
PercentScoreWeightW2=get_score_weight("PercentScoreWeightW2")
PercentScoreWeightW3=get_score_weight("PercentScoreWeightW3")
PercentScoreWeightW4=get_score_weight("PercentScoreWeightW4")
PercentScoreWeightW5=get_score_weight("PercentScoreWeightW5")
GradeWeightCheckpointHit=get_score_weight("GradeWeightCheckpointHit")
GradeWeightCheckpointMiss=get_score_weight("GradeWeightCheckpointMiss")
GradeWeightHeld=get_score_weight("GradeWeightHeld")
GradeWeightHitMine=get_score_weight("GradeWeightHitMine")
GradeWeightLetGo=get_score_weight("GradeWeightLetGo")
GradeWeightMissedHold=get_score_weight("GradeWeightMissedHold")
GradeWeightMiss=get_score_weight("GradeWeightMiss")
GradeWeightW1=get_score_weight("GradeWeightW1")
GradeWeightW2=get_score_weight("GradeWeightW2")
GradeWeightW3=get_score_weight("GradeWeightW3")
GradeWeightW4=get_score_weight("GradeWeightW4")
GradeWeightW5=get_score_weight("GradeWeightW5")
